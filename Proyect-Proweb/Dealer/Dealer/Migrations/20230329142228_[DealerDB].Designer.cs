// <auto-generated />
using System;
using Dealer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dealer.Migrations
{
    [DbContext(typeof(DEALERContext))]
    [Migration("20230329142228_[DealerDB]")]
    partial class DealerDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dealer.Models.ColorExterior", b =>
                {
                    b.Property<int>("IdColorExterior")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_color_exterior");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColorExterior"), 1L, 1);

                    b.Property<string>("ColorExterior1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("color_exterior");

                    b.Property<decimal?>("PrecioColorExterior")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_color_exterior");

                    b.HasKey("IdColorExterior")
                        .HasName("PK__color_ex__A6FF2A213232A96E");

                    b.ToTable("color_exterior", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.ColorInterior", b =>
                {
                    b.Property<int>("IdColorInterior")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_color_interior");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColorInterior"), 1L, 1);

                    b.Property<string>("ColorInterior1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("color_interior");

                    b.Property<decimal?>("PrecioColorInterior")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_color_interior");

                    b.HasKey("IdColorInterior")
                        .HasName("PK__color_in__9E309F1B7D2FD41D");

                    b.ToTable("color_interior", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.Concesionario", b =>
                {
                    b.Property<int>("IdConcesionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_concesionario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConcesionario"), 1L, 1);

                    b.Property<string>("Img")
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("NombreConcesionario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_concesionario");

                    b.HasKey("IdConcesionario")
                        .HasName("PK__concesio__FE95AA278C47716B");

                    b.ToTable("concesionario", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.EquipamientoExtra", b =>
                {
                    b.Property<int>("IdEquipamientoExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipamiento_extra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamientoExtra"), 1L, 1);

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<string>("Img")
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("NombreEquipamientoExtra")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombre_equipamiento_extra");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.HasKey("IdEquipamientoExtra")
                        .HasName("PK__equipami__E517FE91DF344DC9");

                    b.HasIndex("IdModelo");

                    b.ToTable("equipamiento_extra", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.EquipamientoSerie", b =>
                {
                    b.Property<int>("IdEquipamientoSerie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipamiento_serie");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamientoSerie"), 1L, 1);

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<string>("NombreEquipamientoExtra")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombre_equipamiento_extra");

                    b.HasKey("IdEquipamientoSerie")
                        .HasName("PK__equipami__FA575F32D8200466");

                    b.HasIndex("IdModelo");

                    b.ToTable("equipamiento_serie", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("NombreMarca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_marca");

                    b.Property<string>("UrlLogoMarca")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url_logo_marca");

                    b.HasKey("IdMarca")
                        .HasName("PK__marca__7E43E99E2906E87E");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_metodo_pago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"), 1L, 1);

                    b.Property<string>("MetodoPago1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("metodo_pago");

                    b.HasKey("IdMetodoPago")
                        .HasName("PK__metodo_p__85BE0EBC15E505E9");

                    b.ToTable("metodo_pago", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.Modelo", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModelo"), 1L, 1);

                    b.Property<string>("Cilindrada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cilindrada");

                    b.Property<string>("Combustible")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("combustible");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<string>("ImgModelo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("img_modelo");

                    b.Property<string>("NombreModelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombre_modelo");

                    b.Property<string>("Pasajeros")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pasajeros");

                    b.Property<string>("Potencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("potencia");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_base");

                    b.Property<string>("Traccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("traccion");

                    b.HasKey("IdModelo")
                        .HasName("PK__modelo__B3BFCFF1FF4D45DF");

                    b.HasIndex("IdMarca");

                    b.ToTable("modelo", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficial", b =>
                {
                    b.Property<int>("IdServicioOficial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servicio_oficial");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicioOficial"), 1L, 1);

                    b.Property<string>("DomicilioServicioOficial")
                        .HasColumnType("text")
                        .HasColumnName("domicilio_servicio_oficial");

                    b.Property<int?>("IdConcesionario")
                        .HasColumnType("int")
                        .HasColumnName("id_concesionario");

                    b.Property<string>("ImgConcesionario")
                        .HasColumnType("text")
                        .HasColumnName("img_concesionario");

                    b.Property<string>("NombreServicioOficial")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_servicio_oficial");

                    b.Property<string>("RncServicioOficial")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("rnc_servicio_oficial");

                    b.HasKey("IdServicioOficial")
                        .HasName("PK__servicio__50B63F8234B1E4DA");

                    b.HasIndex("IdConcesionario");

                    b.ToTable("servicio_oficial", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficialCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("CedulaCliente")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cedula_cliente");

                    b.Property<int?>("IdServicioOficial")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio_oficial");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_cliente");

                    b.Property<string>("TelefonoCliente")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("telefono_cliente");

                    b.HasKey("IdCliente")
                        .HasName("PK__servicio__677F38F5B63FA532");

                    b.ToTable("servicio_oficial_clientes", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficialVendedore", b =>
                {
                    b.Property<int>("IdVendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_vendedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVendedor"), 1L, 1);

                    b.Property<string>("CedulaVendedor")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cedula_vendedor");

                    b.Property<string>("Domicilio")
                        .HasColumnType("text")
                        .HasColumnName("domicilio");

                    b.Property<int?>("IdServicioOficial")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio_oficial");

                    b.Property<string>("NombreVendedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_vendedor");

                    b.HasKey("IdVendedor")
                        .HasName("PK__servicio__0093030840C18B5E");

                    b.HasIndex("IdServicioOficial");

                    b.ToTable("servicio_oficial_vendedores", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.VehiculoPersonalizado", b =>
                {
                    b.Property<int>("IdConstruccionVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_construccion_vehiculo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConstruccionVehiculo"), 1L, 1);

                    b.Property<int?>("ColorExterior")
                        .HasColumnType("int")
                        .HasColumnName("color_exterior");

                    b.Property<int?>("ColorInterior")
                        .HasColumnType("int")
                        .HasColumnName("color_interior");

                    b.Property<int?>("Extra01")
                        .HasColumnType("int")
                        .HasColumnName("extra_01");

                    b.Property<int?>("Extra02")
                        .HasColumnType("int")
                        .HasColumnName("extra_02");

                    b.Property<int?>("Extra03")
                        .HasColumnType("int")
                        .HasColumnName("extra_03");

                    b.Property<int?>("Extra04")
                        .HasColumnType("int")
                        .HasColumnName("extra_04");

                    b.Property<int?>("Extra05")
                        .HasColumnType("int")
                        .HasColumnName("extra_05");

                    b.Property<int?>("Extra06")
                        .HasColumnType("int")
                        .HasColumnName("extra_06");

                    b.Property<int?>("Extra07")
                        .HasColumnType("int")
                        .HasColumnName("extra_07");

                    b.Property<int?>("Extra08")
                        .HasColumnType("int")
                        .HasColumnName("extra_08");

                    b.Property<int?>("Extra09")
                        .HasColumnType("int")
                        .HasColumnName("extra_09");

                    b.Property<int?>("Extra10")
                        .HasColumnType("int")
                        .HasColumnName("extra_10");

                    b.Property<int?>("Extra11")
                        .HasColumnType("int")
                        .HasColumnName("extra_11");

                    b.Property<int?>("Extra12")
                        .HasColumnType("int")
                        .HasColumnName("extra_12");

                    b.Property<int?>("Extra13")
                        .HasColumnType("int")
                        .HasColumnName("extra_13");

                    b.Property<int?>("Extra14")
                        .HasColumnType("int")
                        .HasColumnName("extra_14");

                    b.Property<int?>("Extra15")
                        .HasColumnType("int")
                        .HasColumnName("extra_15");

                    b.Property<int?>("Extra16")
                        .HasColumnType("int")
                        .HasColumnName("extra_16");

                    b.Property<int?>("Extra17")
                        .HasColumnType("int")
                        .HasColumnName("extra_17");

                    b.Property<int?>("Extra18")
                        .HasColumnType("int")
                        .HasColumnName("extra_18");

                    b.Property<int?>("Extra19")
                        .HasColumnType("int")
                        .HasColumnName("extra_19");

                    b.Property<int?>("Extra20")
                        .HasColumnType("int")
                        .HasColumnName("extra_20");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<string>("Vin")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("VIN");

                    b.HasKey("IdConstruccionVehiculo")
                        .HasName("PK__vehiculo__712ECA30B9B48AEF");

                    b.HasIndex("ColorExterior");

                    b.HasIndex("ColorInterior");

                    b.HasIndex("Extra01");

                    b.HasIndex("Extra02");

                    b.HasIndex("Extra03");

                    b.HasIndex("Extra04");

                    b.HasIndex("Extra05");

                    b.HasIndex("Extra06");

                    b.HasIndex("Extra07");

                    b.HasIndex("Extra08");

                    b.HasIndex("Extra09");

                    b.HasIndex("Extra10");

                    b.HasIndex("Extra11");

                    b.HasIndex("Extra12");

                    b.HasIndex("Extra13");

                    b.HasIndex("Extra14");

                    b.HasIndex("Extra15");

                    b.HasIndex("Extra16");

                    b.HasIndex("Extra17");

                    b.HasIndex("Extra18");

                    b.HasIndex("Extra19");

                    b.HasIndex("Extra20");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdModelo");

                    b.ToTable("vehiculo_personalizado", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.VehiculosStock", b =>
                {
                    b.Property<int>("IdVehiculoStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_vehiculo_stock");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVehiculoStock"), 1L, 1);

                    b.Property<string>("Anio")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("anio");

                    b.Property<int?>("ColorExterior")
                        .HasColumnType("int")
                        .HasColumnName("color_exterior");

                    b.Property<int?>("ColorInterior")
                        .HasColumnType("int")
                        .HasColumnName("color_interior");

                    b.Property<string>("DescripcionEquipamientoExtra")
                        .HasColumnType("text")
                        .HasColumnName("descripcion_equipamiento_extra");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<string>("Img")
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<string>("Vin")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("VIN");

                    b.HasKey("IdVehiculoStock")
                        .HasName("PK__vehiculo__2C97B5734C4173AF");

                    b.HasIndex("ColorExterior");

                    b.HasIndex("ColorInterior");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdModelo");

                    b.ToTable("vehiculos_stock", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.VehiculosVendido", b =>
                {
                    b.Property<int>("IdVehiculoVendido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_vehiculo_vendido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVehiculoVendido"), 1L, 1);

                    b.Property<string>("Cliente")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cliente");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("modelo");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<string>("Vendedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("vendedor");

                    b.Property<string>("Vin")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("VIN");

                    b.HasKey("IdVehiculoVendido")
                        .HasName("PK__vehiculo__EBE1BF2D84DF5318");

                    b.ToTable("vehiculos_vendidos", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"), 1L, 1);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("date")
                        .HasColumnName("fecha_entrega");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("IdConcesionario")
                        .HasColumnType("int")
                        .HasColumnName("id_concesionario");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<int?>("IdServicioOficial")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio_oficial");

                    b.Property<int?>("IdVendedor")
                        .HasColumnType("int")
                        .HasColumnName("id_vendedor");

                    b.Property<int?>("MetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("metodo_pago");

                    b.Property<int?>("PrecioVehiculoPersonalizado")
                        .HasColumnType("int")
                        .HasColumnName("precio_vehiculo_personalizado");

                    b.Property<int?>("PrecioVehiculoStock")
                        .HasColumnType("int")
                        .HasColumnName("precio_vehiculo_stock");

                    b.Property<string>("Registro")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("registro");

                    b.Property<int?>("VinVehiculoPersonalizado")
                        .HasColumnType("int")
                        .HasColumnName("VIN_vehiculo_personalizado");

                    b.Property<int?>("VinVehiculoStock")
                        .HasColumnType("int")
                        .HasColumnName("VIN_vehiculo_stock");

                    b.HasKey("IdVenta")
                        .HasName("PK__ventas__459533BF48EE8E87");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdConcesionario");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdModelo");

                    b.HasIndex("IdServicioOficial");

                    b.HasIndex("IdVendedor");

                    b.HasIndex("MetodoPago");

                    b.HasIndex("PrecioVehiculoPersonalizado");

                    b.HasIndex("PrecioVehiculoStock");

                    b.HasIndex("VinVehiculoPersonalizado");

                    b.HasIndex("VinVehiculoStock");

                    b.ToTable("ventas", (string)null);
                });

            modelBuilder.Entity("Dealer.Models.EquipamientoExtra", b =>
                {
                    b.HasOne("Dealer.Models.Modelo", "IdModeloNavigation")
                        .WithMany("EquipamientoExtras")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("fk_equipamientoExtra_modelo");

                    b.Navigation("IdModeloNavigation");
                });

            modelBuilder.Entity("Dealer.Models.EquipamientoSerie", b =>
                {
                    b.HasOne("Dealer.Models.Modelo", "IdModeloNavigation")
                        .WithMany("EquipamientoSeries")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("fk_equipamientoSerie_modelo");

                    b.Navigation("IdModeloNavigation");
                });

            modelBuilder.Entity("Dealer.Models.Modelo", b =>
                {
                    b.HasOne("Dealer.Models.Marca", "IdMarcaNavigation")
                        .WithMany("Modelos")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("fk_modelo_to_marca");

                    b.Navigation("IdMarcaNavigation");
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficial", b =>
                {
                    b.HasOne("Dealer.Models.Concesionario", "IdConcesionarioNavigation")
                        .WithMany("ServicioOficials")
                        .HasForeignKey("IdConcesionario")
                        .HasConstraintName("fk_servicioOficial_concesionario");

                    b.Navigation("IdConcesionarioNavigation");
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficialVendedore", b =>
                {
                    b.HasOne("Dealer.Models.ServicioOficial", "IdServicioOficialNavigation")
                        .WithMany("ServicioOficialVendedores")
                        .HasForeignKey("IdServicioOficial")
                        .HasConstraintName("fk_servicioOficial_vendedores");

                    b.Navigation("IdServicioOficialNavigation");
                });

            modelBuilder.Entity("Dealer.Models.VehiculoPersonalizado", b =>
                {
                    b.HasOne("Dealer.Models.ColorExterior", "ColorExteriorNavigation")
                        .WithMany("VehiculoPersonalizados")
                        .HasForeignKey("ColorExterior")
                        .HasConstraintName("fk_construct_color_exterior");

                    b.HasOne("Dealer.Models.ColorInterior", "ColorInteriorNavigation")
                        .WithMany("VehiculoPersonalizados")
                        .HasForeignKey("ColorInterior")
                        .HasConstraintName("fk_construct_color_interior");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra01Navigation")
                        .WithMany("VehiculoPersonalizadoExtra01Navigations")
                        .HasForeignKey("Extra01")
                        .HasConstraintName("fk_construct_extra01");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra02Navigation")
                        .WithMany("VehiculoPersonalizadoExtra02Navigations")
                        .HasForeignKey("Extra02")
                        .HasConstraintName("fk_construct_extra02");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra03Navigation")
                        .WithMany("VehiculoPersonalizadoExtra03Navigations")
                        .HasForeignKey("Extra03")
                        .HasConstraintName("fk_construct_extra03");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra04Navigation")
                        .WithMany("VehiculoPersonalizadoExtra04Navigations")
                        .HasForeignKey("Extra04")
                        .HasConstraintName("fk_construct_extra04");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra05Navigation")
                        .WithMany("VehiculoPersonalizadoExtra05Navigations")
                        .HasForeignKey("Extra05")
                        .HasConstraintName("fk_construct_extra05");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra06Navigation")
                        .WithMany("VehiculoPersonalizadoExtra06Navigations")
                        .HasForeignKey("Extra06")
                        .HasConstraintName("fk_construct_extra06");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra07Navigation")
                        .WithMany("VehiculoPersonalizadoExtra07Navigations")
                        .HasForeignKey("Extra07")
                        .HasConstraintName("fk_construct_extra07");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra08Navigation")
                        .WithMany("VehiculoPersonalizadoExtra08Navigations")
                        .HasForeignKey("Extra08")
                        .HasConstraintName("fk_construct_extra08");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra09Navigation")
                        .WithMany("VehiculoPersonalizadoExtra09Navigations")
                        .HasForeignKey("Extra09")
                        .HasConstraintName("fk_construct_extra09");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra10Navigation")
                        .WithMany("VehiculoPersonalizadoExtra10Navigations")
                        .HasForeignKey("Extra10")
                        .HasConstraintName("fk_construct_extra10");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra11Navigation")
                        .WithMany("VehiculoPersonalizadoExtra11Navigations")
                        .HasForeignKey("Extra11")
                        .HasConstraintName("fk_construct_extra11");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra12Navigation")
                        .WithMany("VehiculoPersonalizadoExtra12Navigations")
                        .HasForeignKey("Extra12")
                        .HasConstraintName("fk_construct_extra12");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra13Navigation")
                        .WithMany("VehiculoPersonalizadoExtra13Navigations")
                        .HasForeignKey("Extra13")
                        .HasConstraintName("fk_construct_extra13");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra14Navigation")
                        .WithMany("VehiculoPersonalizadoExtra14Navigations")
                        .HasForeignKey("Extra14")
                        .HasConstraintName("fk_construct_extra14");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra15Navigation")
                        .WithMany("VehiculoPersonalizadoExtra15Navigations")
                        .HasForeignKey("Extra15")
                        .HasConstraintName("fk_construct_extra15");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra16Navigation")
                        .WithMany("VehiculoPersonalizadoExtra16Navigations")
                        .HasForeignKey("Extra16")
                        .HasConstraintName("fk_construct_extra16");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra17Navigation")
                        .WithMany("VehiculoPersonalizadoExtra17Navigations")
                        .HasForeignKey("Extra17")
                        .HasConstraintName("fk_construct_extra17");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra18Navigation")
                        .WithMany("VehiculoPersonalizadoExtra18Navigations")
                        .HasForeignKey("Extra18")
                        .HasConstraintName("fk_construct_extra18");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra19Navigation")
                        .WithMany("VehiculoPersonalizadoExtra19Navigations")
                        .HasForeignKey("Extra19")
                        .HasConstraintName("fk_construct_extra19");

                    b.HasOne("Dealer.Models.EquipamientoExtra", "Extra20Navigation")
                        .WithMany("VehiculoPersonalizadoExtra20Navigations")
                        .HasForeignKey("Extra20")
                        .HasConstraintName("fk_construct_extra20");

                    b.HasOne("Dealer.Models.Marca", "IdMarcaNavigation")
                        .WithMany("VehiculoPersonalizados")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("fk_constructVehiculo_marca");

                    b.HasOne("Dealer.Models.Modelo", "IdModeloNavigation")
                        .WithMany("VehiculoPersonalizados")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("fk_constructVehiculo_modelo");

                    b.Navigation("ColorExteriorNavigation");

                    b.Navigation("ColorInteriorNavigation");

                    b.Navigation("Extra01Navigation");

                    b.Navigation("Extra02Navigation");

                    b.Navigation("Extra03Navigation");

                    b.Navigation("Extra04Navigation");

                    b.Navigation("Extra05Navigation");

                    b.Navigation("Extra06Navigation");

                    b.Navigation("Extra07Navigation");

                    b.Navigation("Extra08Navigation");

                    b.Navigation("Extra09Navigation");

                    b.Navigation("Extra10Navigation");

                    b.Navigation("Extra11Navigation");

                    b.Navigation("Extra12Navigation");

                    b.Navigation("Extra13Navigation");

                    b.Navigation("Extra14Navigation");

                    b.Navigation("Extra15Navigation");

                    b.Navigation("Extra16Navigation");

                    b.Navigation("Extra17Navigation");

                    b.Navigation("Extra18Navigation");

                    b.Navigation("Extra19Navigation");

                    b.Navigation("Extra20Navigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdModeloNavigation");
                });

            modelBuilder.Entity("Dealer.Models.VehiculosStock", b =>
                {
                    b.HasOne("Dealer.Models.ColorExterior", "ColorExteriorNavigation")
                        .WithMany("VehiculosStocks")
                        .HasForeignKey("ColorExterior")
                        .HasConstraintName("fk_vehiculoStock_color_exterior");

                    b.HasOne("Dealer.Models.ColorInterior", "ColorInteriorNavigation")
                        .WithMany("VehiculosStocks")
                        .HasForeignKey("ColorInterior")
                        .HasConstraintName("fk_vehiculoStock_color_interior");

                    b.HasOne("Dealer.Models.Marca", "IdMarcaNavigation")
                        .WithMany("VehiculosStocks")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("fk_vehiculoStock_marca");

                    b.HasOne("Dealer.Models.Modelo", "IdModeloNavigation")
                        .WithMany("VehiculosStocks")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("fk_vehiculoStock_modelo");

                    b.Navigation("ColorExteriorNavigation");

                    b.Navigation("ColorInteriorNavigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdModeloNavigation");
                });

            modelBuilder.Entity("Dealer.Models.Venta", b =>
                {
                    b.HasOne("Dealer.Models.ServicioOficialCliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_venta_cliente");

                    b.HasOne("Dealer.Models.Concesionario", "IdConcesionarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdConcesionario")
                        .HasConstraintName("fk_venta_concesionario");

                    b.HasOne("Dealer.Models.Marca", "IdMarcaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("fk_venta_VehiculoMarca");

                    b.HasOne("Dealer.Models.Modelo", "IdModeloNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("fk_venta_VehiculoModelo");

                    b.HasOne("Dealer.Models.ServicioOficial", "IdServicioOficialNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdServicioOficial")
                        .HasConstraintName("fk_venta_servicio_oficial");

                    b.HasOne("Dealer.Models.ServicioOficialVendedore", "IdVendedorNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdVendedor")
                        .HasConstraintName("fk_venta_vendedor");

                    b.HasOne("Dealer.Models.MetodoPago", "MetodoPagoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("MetodoPago")
                        .HasConstraintName("fk_venta_metodoPago");

                    b.HasOne("Dealer.Models.VehiculoPersonalizado", "PrecioVehiculoPersonalizadoNavigation")
                        .WithMany("VentaPrecioVehiculoPersonalizadoNavigations")
                        .HasForeignKey("PrecioVehiculoPersonalizado")
                        .HasConstraintName("fk_venta_precioPersonalizado");

                    b.HasOne("Dealer.Models.VehiculosStock", "PrecioVehiculoStockNavigation")
                        .WithMany("VentaPrecioVehiculoStockNavigations")
                        .HasForeignKey("PrecioVehiculoStock")
                        .HasConstraintName("fk_venta_precioStock");

                    b.HasOne("Dealer.Models.VehiculoPersonalizado", "VinVehiculoPersonalizadoNavigation")
                        .WithMany("VentaVinVehiculoPersonalizadoNavigations")
                        .HasForeignKey("VinVehiculoPersonalizado")
                        .HasConstraintName("fk_venta_VINpersonalizado");

                    b.HasOne("Dealer.Models.VehiculosStock", "VinVehiculoStockNavigation")
                        .WithMany("VentaVinVehiculoStockNavigations")
                        .HasForeignKey("VinVehiculoStock")
                        .HasConstraintName("fk_venta_VINstock");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdConcesionarioNavigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdModeloNavigation");

                    b.Navigation("IdServicioOficialNavigation");

                    b.Navigation("IdVendedorNavigation");

                    b.Navigation("MetodoPagoNavigation");

                    b.Navigation("PrecioVehiculoPersonalizadoNavigation");

                    b.Navigation("PrecioVehiculoStockNavigation");

                    b.Navigation("VinVehiculoPersonalizadoNavigation");

                    b.Navigation("VinVehiculoStockNavigation");
                });

            modelBuilder.Entity("Dealer.Models.ColorExterior", b =>
                {
                    b.Navigation("VehiculoPersonalizados");

                    b.Navigation("VehiculosStocks");
                });

            modelBuilder.Entity("Dealer.Models.ColorInterior", b =>
                {
                    b.Navigation("VehiculoPersonalizados");

                    b.Navigation("VehiculosStocks");
                });

            modelBuilder.Entity("Dealer.Models.Concesionario", b =>
                {
                    b.Navigation("ServicioOficials");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.EquipamientoExtra", b =>
                {
                    b.Navigation("VehiculoPersonalizadoExtra01Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra02Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra03Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra04Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra05Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra06Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra07Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra08Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra09Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra10Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra11Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra12Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra13Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra14Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra15Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra16Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra17Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra18Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra19Navigations");

                    b.Navigation("VehiculoPersonalizadoExtra20Navigations");
                });

            modelBuilder.Entity("Dealer.Models.Marca", b =>
                {
                    b.Navigation("Modelos");

                    b.Navigation("VehiculoPersonalizados");

                    b.Navigation("VehiculosStocks");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.MetodoPago", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.Modelo", b =>
                {
                    b.Navigation("EquipamientoExtras");

                    b.Navigation("EquipamientoSeries");

                    b.Navigation("VehiculoPersonalizados");

                    b.Navigation("VehiculosStocks");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficial", b =>
                {
                    b.Navigation("ServicioOficialVendedores");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficialCliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.ServicioOficialVendedore", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Dealer.Models.VehiculoPersonalizado", b =>
                {
                    b.Navigation("VentaPrecioVehiculoPersonalizadoNavigations");

                    b.Navigation("VentaVinVehiculoPersonalizadoNavigations");
                });

            modelBuilder.Entity("Dealer.Models.VehiculosStock", b =>
                {
                    b.Navigation("VentaPrecioVehiculoStockNavigations");

                    b.Navigation("VentaVinVehiculoStockNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
